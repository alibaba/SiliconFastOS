# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2020 Wang Nan <pi3orama@163.com>

# Default target when cmdline is empty
PHONY := _all
_all:

# If the user is running make -s (silent mode), suppress echoing of
# commands

# kbuild_stage is part of API. User makefile controls variables and
# make targets can be seen by kbuild through kbuild_stage.
# An example user makefile:
#
# ... Definitions should be seen in all stages, like KBUILD_STANDALONE_TARGETS.
#
# ifeq ($(kbuild_stage),)
# ... Definitions provided for Makefile.output, like KBUILD_STANDALONE_SRCDIRS.
# endif
#
# ifeq ($(kbuild_stage),1)
# ... Definitions for Makefile.main, like KBUILD_STANDALONE_PREPARE.
# endif
#
# makefile_include := $(shell pkg-config --variable=makefile_include kbuild-standalone)
# include $(makefile_include)
#
# ifeq ($(kbuild_stage),2)
# ... Definitions after Makefile.main.
# endif
#

ifeq ($(kbuild_stage),)
# kbuild_stage is not set, this is first pass. Directly included
# by original makefile.
# abs_kbuildtree is directory of kbuild standalone
# abs_srctree is the Makefile which include Makefile.include.
# It should be the makefile directly include this file.
  abs_kbuildtree	:= $(realpath $(dir $(lastword $(MAKEFILE_LIST))))
  abs_srctree		:= $(realpath $(dir $(firstword $(MAKEFILE_LIST))))
  abs_top_makefile	:= $(realpath $(firstword $(MAKEFILE_LIST)))
  export abs_kbuildtree abs_srctree abs_top_makefile

  include $(abs_kbuildtree)/Makefile.head
  include $(abs_kbuildtree)/Makefile.output
  kbuild_stage := 1
  export kbuild_stage
else
  kbuild_stage := 2
  export kbuild_stage
  include $(abs_kbuildtree)/Makefile.env
  include $(abs_kbuildtree)/Makefile.main
endif

PHONY += FORCE
FORCE:

# Declare the contents of the PHONY variable as phony.  We keep that
# information in a variable so we can use it in if_changed and friends.
.PHONY: $(PHONY)
